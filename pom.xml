<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
      http://www.apache.org/licenses/LICENSE-2.0
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.intel.oap</groupId>
    <artifactId>pmem-common</artifactId>
    <version>1.1.0</version>
    <name>OAP Project PMem Common</name>
    <packaging>jar</packaging>

    <properties>
        <exec.maven.version>1.6.0</exec.maven.version>
        <guava.version>18.0</guava.version>
        <java.version>1.8</java.version>
        <junit.version>4.12</junit.version>
        <pmemkv.version>1.0.0</pmemkv.version>
        <slf4j.version>1.7.16</slf4j.version>
        <spark.version>3.1.1</spark.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}-${project.version}-with-spark-${spark.version}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <executions>
                    <execution>
                        <id>default-compile</id>
                        <configuration>
                            <source>${java.version}</source>
                            <target>${java.version}</target>
                            <encoding>UTF-8</encoding>
                            <maxmem>1024m</maxmem>
                            <fork>true</fork>
                            <compilerArgs>
                                <arg>-Xlint:all,-serial,-path</arg>
                            </compilerArgs>
                            <excludes>
                                <exclude>**/pmemblk/*.java</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>default-testCompile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                        <configuration>
                            <source>${java.version}</source>
                            <target>${java.version}</target>
                            <encoding>UTF-8</encoding>
                            <maxmem>1024m</maxmem>
                            <fork>true</fork>
                            <compilerArgs>
                                <arg>-Xlint:all,-serial,-path</arg>
                            </compilerArgs>
                            <testExcludes>
                                <exclude>**/PMemBlockPlatformTest.java</exclude>
                                <exclude>**/PMemBlkChunkReaderWriterTest.java</exclude>
                                <exclude>**/PMemKVDatabaseTest.java</exclude>
                            </testExcludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M5</version>
                <configuration>
                    <excludes>
                        <exclude>**/PMemBlkChunkReaderWriterTest.java</exclude>
                        <exclude>**/PMemKVDatabaseTest.java</exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>persistent-memory</id>
            <build>
                <resources>
                    <resource>
                        <directory>${basedir}/src/resources</directory>
                    </resource>
                </resources>
                <plugins>
                    <plugin>
                        <artifactId>exec-maven-plugin</artifactId>
                        <groupId>org.codehaus.mojo</groupId>
                        <version>${exec.maven.version}</version>
                        <executions>
                            <execution>
                                <id>Compile memkind</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${basedir}/src/native/memkind/compile.sh</executable>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>vmemcache</id>
            <build>
                <resources>
                    <resource>
                        <directory>${basedir}/src/resources</directory>
                    </resource>
                </resources>
                <plugins>
                    <plugin>
                        <artifactId>exec-maven-plugin</artifactId>
                        <groupId>org.codehaus.mojo</groupId>
                        <version>${exec.maven.version}</version>
                        <executions>
                            <execution>
                                <id>Compile vmemcache</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${basedir}/src/native/vmemcache/compile.sh</executable>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>libpmemblk</id>
            <build>
                <resources>
                    <resource>
                        <directory>${basedir}/src/resources</directory>
                    </resource>
                </resources>
                <plugins>
                    <plugin>
                        <artifactId>exec-maven-plugin</artifactId>
                        <groupId>org.codehaus.mojo</groupId>
                        <version>${exec.maven.version}</version>
                        <executions>
                            <execution>
                                <id>Compile libpmemblk</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${basedir}/src/native/libpmemblk/compile.sh</executable>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
